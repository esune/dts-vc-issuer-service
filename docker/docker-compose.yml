version: "3"

services:

  # .Net Core API Issuer
  issuer-api-dev:
    image: dts-vc-issuer-api-dev
    environment:
      APP: "dev"
      DB_CONNECTION_STRING: "Host=db;Port=5432;Database=${ISSUER_DATABASE_NAME};Username=${DATABASE_USER};Password=${DATABASE_PASSWORD};"
      ISSUER_AGENT_ADMIN_API_KEY: ${AGENT_ADMIN_API_KEY}
      ISSUER_AGENT_ADMIN_API_URL: ${ISSUER_AGENT_ADMIN_URL}
    ports:
      - ${ISSUER_API_PORT}:5000
    networks:
      - dts-vc-issuer
    volumes:
      - ../issuer-api/:/app
      - issuer-api-dev-bin:/app/bin
      - issuer-api-dev-obj:/app/obj
    depends_on:
      - db
    entrypoint: /bin/bash 
    command: [
      "-c",
      "echo waiting for db ...;
      sleep 15;
      echo \"Running database migrations...\";
      dotnet ef database update;
      echo \"Starting service...\";
      dotnet watch run --urls=http://+:5000"
    ]

  # .Net Core API Immunization
  immunization-api-dev:
    image: dts-vc-immunization-api-dev
    ports:
      - ${IMMUNIZATION_API_PORT}:5000
    networks:
      - dts-vc-issuer
    volumes:
      - ../immunization-api/src:/app
      - immunization-api-dev-bin:/app/bin
      - immunization-api-dev-obj:/app/obj

  # PostgreSQL database used by the API
  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: default
    ports:
      - ${EXPOSED_DATABASE_PORT}:5432
    networks:
      - dts-vc-issuer
    volumes:
      - db-data:/var/lib/postgresql/data

  # Angular Frontend
  frontend:
    image: node:erbium
    volumes:
      - ../angular-frontend:/usr/src/frontend
      - frontend-npm-cache:/usr/src/frontend/node_modules
    working_dir: /usr/src/frontend
    ports:
      - ${FRONTEND_WEB_PORT}:${FRONTEND_WEB_PORT}
    networks:
      - dts-vc-issuer
    depends_on:
      - issuer-api-dev
    entrypoint: /bin/bash
    command: ["-c", "npm install; npm run serve"]

  # # Keycloak
  # keycloak:
  #   image: jboss/keycloak:12.0.4
  #   environment:
  #     DB_VENDOR: ${KEYCLOAK_DB_VENDOR}
  #     DB_ADDR: ${KEYCLOAK_DB_ADDR}
  #     DB_DATABASE: ${KEYCLOAK_DB_NAME}
  #     DB_USER: ${KEYCLOAK_DB_USER}
  #     DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
  #     KEYCLOAK_USER: ${KEYCLOAK_USER}
  #     KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
  #     KEYCLOAK_LOGLEVEL: ${KEYCLOAK_LOGLEVEL}
  #     ROOT_LOGLEVEL: ${KEYCLOAK_ROOT_LOGLEVEL}
  #     # KEYCLOAK_IMPORT: ${KEYCLOAK_IMPORT}
  #   # volumes:
  #   #   - ../docker/keycloak/config/realm-export-docker.json:/tmp/realm-export-docker.json
  #   ports:
  #     - 8180:8080
  #   depends_on:
  #     - keycloak-db
  #   networks:
  #     - dts-vc-issuer

  # # Keycloak DB
  # keycloak-db:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: ${KEYCLOAK_DB_USER}
  #     POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
  #     POSTGRES_DB: ${KEYCLOAK_DB_NAME}
  #   volumes:
  #     - keycloak-db-data:/var/lib/postgresql/data
  #   networks:
  #     - dts-vc-issuer

  # Agent
  agent:
    image: bcgovimages/aries-cloudagent:py36-1.15-1_0.6.0
    environment:
      ACAPY_LABEL: ${AGENT_NAME}
      ACAPY_ENDPOINT: ${AGENT_ENDPOINT}
      ACAPY_GENESIS_URL: ${LEDGER_URL}/genesis
      ACAPY_WALLET_NAME: ${AGENT_WALLET_NAME}
      ACAPY_WALLET_TYPE: "indy"
      ACAPY_WALLET_KEY: ${AGENT_WALLET_ENCRYPTION_KEY}
      ACAPY_WALLET_SEED: ${AGENT_WALLET_SEED}
      ACAPY_WALLET_STORAGE_TYPE: ${AGENT_WALLET_STORAGE_TYPE}
      ACAPY_AUTO_PROVISION: "true"
      ACAPY_WEBHOOK_URL: ${AGENT_WEBHOOK_URL}
      ACAPY_LOG_LEVEL: ${LOG_LEVEL}
      ACAPY_AUTO_ACCEPT_INVITES: "true"
      ACAPY_AUTO_ACCEPT_REQUESTS: "true"
      ACAPY_AUTO_PING_CONNECTION: "true"
      ACAPY_AUTO_RESPOND_MESSAGES: "true"
      ACAPY_TAILS_SERVER_BASE_URL: ${TAILS_SERVER_URL}
      AGENT_HTTP_IN_PORT: ${AGENT_HTTP_IN_PORT}
      AGENT_WS_IN_PORT: ${AGENT_WS_IN_PORT}
      AGENT_ADMIN_PORT: ${AGENT_ADMIN_PORT}
      WALLET_HOST: ${WALLET_HOST}
      WALLET_PORT: ${WALLET_PORT}
      WALLET_USER: ${WALLET_USER}
      WALLET_PASSWORD: ${WALLET_PASSWORD}
    networks:
      - dts-vc-issuer
    ports:
      - ${AGENT_HTTP_IN_PORT}:${AGENT_HTTP_IN_PORT}
      - ${AGENT_WS_IN_PORT}:${AGENT_WS_IN_PORT}
      - ${AGENT_ADMIN_PORT}:${AGENT_ADMIN_PORT}
    depends_on:
      - wallet
    entrypoint: /bin/bash
    command: [
        "-c",
        "curl -d '{\"seed\":\"${AGENT_WALLET_SEED}\", \"role\":\"ENDORSER\", \"alias\":\"${AGENT_WALLET_NAME}\"}' -X POST ${LEDGER_URL}/register; \
        sleep 5; \
        aca-py start \
        --inbound-transport http '0.0.0.0' ${AGENT_HTTP_IN_PORT} \
        --inbound-transport ws '0.0.0.0' ${AGENT_WS_IN_PORT} \
        --outbound-transport ws \
        --outbound-transport http \
        --wallet-storage-config '{\"url\":\"${WALLET_HOST}:${WALLET_PORT}\",\"max_connections\":5}' \
        --wallet-storage-creds '{\"account\":\"${WALLET_USER}\",\"password\":\"${WALLET_PASSWORD}\",\"admin_account\":\"${WALLET_USER}\",\"admin_password\":\"${WALLET_PASSWORD}\"}' \
        --admin '0.0.0.0' ${AGENT_ADMIN_PORT} \
        --${AGENT_ADMIN_MODE}",
      ]

  # Wallet
  wallet:
    image: postgres:12-alpine
    environment:
      POSTGRES_USER: ${WALLET_USER}
      POSTGRES_PASSWORD: ${WALLET_PASSWORD}
    networks:
      - dts-vc-issuer
    ports:
      - ${EXPOSED_WALLET_PORT}:${WALLET_PORT}
    volumes:
      - wallet-data:/var/lib/postgresql/data

  # Outgoing mail server
  # See: https://hub.docker.com/r/maildev/maildev
  # maildev:
  #   image: maildev/maildev
  #   networks:
  #     - dts-vc-issuer
  #   ports:
  #     - "8050:80"

networks:
  dts-vc-issuer:

volumes:
  keycloak-db-data:
  wallet-data:
  db-data:
  tails-storage:
  issuer-api-dev-bin:
  issuer-api-dev-obj:
  immunization-api-dev-bin:
  immunization-api-dev-obj:
  frontend-npm-cache:
